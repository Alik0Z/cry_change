import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import './index.css'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º CSS
import TableRow from './components/TableRow.jsx';

function AnotherComponent() {
    const navigate = useNavigate();
    const [transactions, setTransactions] = useState([]);

    const removeTransaction = (index) => {
        const updatedTransactions = transactions.filter((_, i) => i !== index);
        setTransactions(updatedTransactions);
        localStorage.setItem('transactions', JSON.stringify(updatedTransactions));
    };

    useEffect(() => {
        const storedTransactions = localStorage.getItem('transactions');
        if (storedTransactions) {
            setTransactions(JSON.parse(storedTransactions));
        }
    }, []);

    return (
        <div className="container">
            <h1 className='title'>üìä –¢–∞–±–ª–∏—Ü–∞ —Ç–æ—Ä–≥–æ–≤</h1>
            <button className="back-button" onClick={() => navigate('/')}>‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</button>
            <table className="crypto-table">
                <thead>
                <tr>
                    <th>–í–∞–ª—é—Ç–∞</th>
                    <th>–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ (USDT)</th>
                    <th>–¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏ (USDT)</th>
                    <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
                    <th>–ü—Ä–∏–±—ã–ª—å/–£–±—ã—Ç–æ–∫ (USDT)</th>
                    <th>–£–¥–∞–ª–∏—Ç—å</th>
                </tr>
                </thead>
                <tbody>
                {transactions.map((tx, index) => (
                    <TableRow key={index} transaction={tx} onRemove={() => removeTransaction(index)} />
                ))}
                </tbody>
            </table>
        </div>
    );
}

export default AnotherComponent;